name: Build and Release Chatterbook

# Trigger only on new tag creation (semantic versioning e.g., v0.1.0)
on:
  push:
    tags:
      - 'v*.*.*'
      - 'test-*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # 3. Install dependencies for Windows builds (on Linux/macOS runner if cross-compiling)
      - name: Install Windows target on Ubuntu
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64

      # 4. Build the project
      - name: Build release binary
        run: |
          case ${{ matrix.platform }} in
            windows-latest)
              cargo build --release --target x86_64-pc-windows-gnu
              ;;
            ubuntu-latest)
              cargo build --release --target x86_64-unknown-linux-gnu
              ;;
            macos-latest)
              cargo build --release --target x86_64-apple-darwin
              ;;
          esac

      # 5. Package binaries
      - name: Prepare binaries
        run: |
          mkdir -p release
          case ${{ matrix.platform }} in
            windows-latest)
              cp target/x86_64-pc-windows-gnu/release/chatterbook.exe release/chatterbook-windows.exe
              ;;
            ubuntu-latest)
              cp target/x86_64-unknown-linux-gnu/release/chatterbook release/chatterbook-linux
              ;;
            macos-latest)
              cp target/x86_64-apple-darwin/release/chatterbook release/chatterbook-macos
              ;;
          esac

      # 6. Create GitHub Release and upload binaries
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}