name: Build and Release Chatterbook

# Trigger on push of tags like v0.1.0
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]

    steps:
      # 1. Checkout repository
      - uses: actions/checkout@v3

      # 2. Install Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      # 3. Install system dependencies if needed
      - name: Install system dependencies (Linux)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
          rustup target add x86_64-apple-darwin
          sudo apt-get install -y pkg-config libssl-dev

      # 4. Build the project
      - name: Build release binary
        run: |
          case ${{ matrix.platform }} in
            windows-latest)
              cargo build --release --target x86_64-pc-windows-gnu
              ;;
            ubuntu-latest)
              cargo build --release --target x86_64-unknown-linux-gnu
              ;;
            macos-latest)
              cargo build --release --target x86_64-apple-darwin
              ;;
          esac

      # 5. Prepare release folder and rename binaries
      - name: Prepare release folder
        run: |
          mkdir -p release
          if [ "${{ matrix.platform }}" == "windows-latest" ]; then
            cp target/release/chatterbook.exe release/chatterbook-windows.exe
          elif [ "${{ matrix.platform }}" == "ubuntu-latest" ]; then
            cp target/release/chatterbook release/chatterbook-linux
          elif [ "${{ matrix.platform }}" == "macos-latest" ]; then
            cp target/release/chatterbook release/chatterbook-macos
          fi

      # 6. Optional: ZIP binaries (recommended for Windows users)
      - name: ZIP binaries
        run: |
          cd release
          if [ "${{ matrix.platform }}" == "windows-latest" ]; then
            zip chatterbook-windows.zip chatterbook-windows.exe
          elif [ "${{ matrix.platform }}" == "ubuntu-latest" ]; then
            zip chatterbook-linux.zip chatterbook-linux
          elif [ "${{ matrix.platform }}" == "macos-latest" ]; then
            zip chatterbook-macos.zip chatterbook-macos
          fi

      # 7. Upload release assets
      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}